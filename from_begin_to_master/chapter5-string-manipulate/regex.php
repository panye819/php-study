<?php
/**
 *  正则表达式
 *  正则表达式是一种描述字符串结构的语法规则，是一个特定的格式化模式，可以匹配、替换、截取匹配的字串.
 *      一个完整的正则表达式由两部分构成，元字符和文本字符。
 *          元字符就是含有特殊含义的字符，如：*,^等
 *          文本字符就是普通的文本。
 *  行定位符（^和$）
 *      ^表示行的开始，$表示行的结尾。
 *  单词定界符 \b,\B
 *      需要匹配的是完整的单词时，使用\b
 *      需要匹配的是不是一个完整的单词，而是其他单词或字串的一部分时，使用\B
 *  字符类 []
 *      忽略大小写时，可以用方括号[]，只要匹配的字符出现在方括号内，即可表示匹配成功。
 *      一个方括号只能匹配一个字符。[t],[Mm]
 *      有一些预定义的字符类
 *  选择字符 |
 *      该字符可以理解为“或”
 *  连字符 -
 *      可以表示字符的范围，如：[a-zA-Z]
 *  排除字符 [^]
 *      [^a-zA-Z],排除以英文字母开头的变量名
 *  限定符 ？*+{n,m}
 *      对于重复出现字母或字串，可以使用限定符来匹配。
 *      ？ 匹配前面的字符0次或1次
 *      +  匹配前面的字符1次或多次
 *      *  匹配前面的字符0次货多次
 *      {n} 匹配前面的字符n次
 *      {n，} 匹配前面的字符最少n次
 *      {n,m} 匹配前面的字符最少n次，最多m次
 *  点号字符 .
 *      点号字符可以匹配出换行符外的任意一个字符。
 *  转义字符 \
 *      都是将特殊字符变为普通的字符
 *  括号字符 ()
 *       括号字符第一个作用是改变限定符的作用范围
 *       括号字符第二个作用是分组
 *  反向引用
 *       反向引用就是依靠表达式的记忆功能来匹配连续出现的字串或字母，如需匹配两个it,（it)\1
 *
 *
 */
    //

