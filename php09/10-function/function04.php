<?php
/**
 * Created by PhpStorm.
 * User: castlepan
 * Date: 2017/9/5
 * Time: 上午9:55
 */

/**
 * 变量的作用域
 *  1、产生原因：
 *      由于函数的封装性，函数内不能访问函数外的数据，函数外也不能访问函数内的数据，所以产生变量作用域问题。
 *  2、变量作用域：
 *      局部变量：
 *         在函数的内部定义的变量，其作用域是所在函数，调用函数时定义，函数调用结束消失。
 *      全局变量：
 *          被定义在所有函数以外的变量，其作用域是整个PHP文件，但在用户自定义函数内部是不可用的。
 *          执行PHP脚本时定义，脚本结束以后或遇到unset()消失。
 *          如果希望在用户自定义函数内部使用全局变量，则要使用global关键字声明全局变量
 *      超全局变量：
 *          本系统自动定义的叫超全局变量，在任意地方都可以使用。
 *          $_GET $_POST $_SERVER $_GLOBALS ......
 *      静态变量：
 *          能够在函数调用结束后扔保留变量值，当再次回到其作用域时，又可用继续使用原来的值。
 *          使用静态变量时，要先用static关键字来声明变量，把关键字static放在要定义的变量之前。
 * 为什么划分为全局变量和局部变量
 *  这是PHP中内存优化的解决方案，因为局部变量在函数结束运行结束后所占用的内容会被释放
 *  全局变量和超全局变量所占用的内存只有在PHP脚本结束后释放。
 *
*/

$str='我是函数外的全局变量';
function show(){
    $str='我是函数内的局部变量';
//    echo $str;

}
show();
echo $str;
echo "<hr/>";
//静态变量演示
//通常用来对函数执行次数进行计数
function testStaic(){
    static $x=0;
    $x+=1;
    echo $x." ";
}
function testNoStaic(){
    $x=0;
    $x+=1;
    echo $x." ";
}
for($i=0;$i<10;$i++) teststaic();
echo "<br>";
for($i=0;$i<10;$i++) testNoStaic();
echo "<br>";

